name: Build and Deploy
on:
  push:
    branches:
      - master
      - main
jobs:
  build-test-and-version:
    name: Build, Test and Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version without v prefix
        id: version
        run: echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
        env:
          TAG: ${{ steps.tag_version.outputs.new_tag }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Build with Gradle
        run: ./gradlew clean build -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon

      - name: Publish component-test and model to GitHub Packages
        run: ./gradlew :modules:component-test:publish :modules:model:publish -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon --info
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/reports/tests/
            **/build/test-results/

  build-docker-images:
    name: Build Docker Images
    needs: build-test-and-version
    strategy:
      matrix:
        arch: [amd64, arm64]
        service: [api-gateway, search-service]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    permissions:
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        run: ./gradlew :modules:${{ matrix.service }}:bootBuildImage --imageName=ghcr.io/simonjamesrowe/${{ matrix.service }}:${{ needs.build-test-and-version.outputs.version }}-${{ matrix.arch }} --publishImage -Pversion=${{ needs.build-test-and-version.outputs.version }} --no-daemon
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-manifests:
    name: Create Multi-Arch Manifests
    needs: [build-test-and-version, build-docker-images]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push api-gateway multi-arch manifest
        run: |
          docker manifest create ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }} \
            ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }}-amd64 \
            ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }}-arm64
          docker manifest push ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }}

      - name: Create and push search-service multi-arch manifest
        run: |
          docker manifest create ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }} \
            ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }}-amd64 \
            ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }}-arm64
          docker manifest push ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }}

      - name: Tag latest Docker images
        run: |
          docker manifest create ghcr.io/simonjamesrowe/api-gateway:latest \
            ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }}-amd64 \
            ghcr.io/simonjamesrowe/api-gateway:${{ needs.build-test-and-version.outputs.version }}-arm64
          docker manifest push ghcr.io/simonjamesrowe/api-gateway:latest
          docker manifest create ghcr.io/simonjamesrowe/search-service:latest \
            ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }}-amd64 \
            ghcr.io/simonjamesrowe/search-service:${{ needs.build-test-and-version.outputs.version }}-arm64
          docker manifest push ghcr.io/simonjamesrowe/search-service:latest
