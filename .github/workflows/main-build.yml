name: Build and Deploy
on:
  push:
    branches:
      - master
      - main
jobs:
  build-test-and-deploy:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version without v prefix
        id: version
        run: echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
        env:
          TAG: ${{ steps.tag_version.outputs.new_tag }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Build with Gradle
        run: ./gradlew clean build -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon

      - name: Publish component-test and model to GitHub Packages
        run: ./gradlew :modules:component-test:publish :modules:model:publish -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon --info
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish api-gateway Docker image
        run: ./gradlew :modules:api-gateway:bootBuildImage --imageName=ghcr.io/simonjamesrowe/api-gateway:${{ steps.version.outputs.VERSION }} --publishImage -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish search-service Docker image
        run: ./gradlew :modules:search-service:bootBuildImage --imageName=ghcr.io/simonjamesrowe/search-service:${{ steps.version.outputs.VERSION }} --publishImage -Pversion=${{ steps.version.outputs.VERSION }} --no-daemon
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag latest Docker images
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ghcr.io/simonjamesrowe/api-gateway:${{ steps.version.outputs.VERSION }}
          docker tag ghcr.io/simonjamesrowe/api-gateway:${{ steps.version.outputs.VERSION }} ghcr.io/simonjamesrowe/api-gateway:latest
          docker push ghcr.io/simonjamesrowe/api-gateway:latest
          docker pull ghcr.io/simonjamesrowe/search-service:${{ steps.version.outputs.VERSION }}
          docker tag ghcr.io/simonjamesrowe/search-service:${{ steps.version.outputs.VERSION }} ghcr.io/simonjamesrowe/search-service:latest
          docker push ghcr.io/simonjamesrowe/search-service:latest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/reports/tests/
            **/build/test-results/
