spring:
  sendgrid:
    api-key: xxxxxx
  security:
    user:
      name: webhook
      password: password
  codec:
    max-in-memory-size: 10MB

  jackson:
    serialization:
      write_dates_as_timestamps: false
  cloud:
    gateway:
      routes:
        - id: cms-json
          uri: ${cms.url}
          predicates:
            - Path=/jobs,/profiles,/tags,/blogs,/blogs/{id},/skills-groups,/social-medias,/tour-steps,/skills
        - id: search
          uri: ${search.url}
          predicates:
            - Path=/search/**
          filters:
            - StripPrefix=1
  kafka:
    consumer:
      properties:
        spring.json.trusted.packages: com.simonjamesrowe.model
      group-id: search-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.simonjamesrowe.model.serialization.WebhookEventDeserializer
      max-poll-records: 20
      enable-auto-commit: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.simonjamesrowe.model.serialization.WebhookEventSerializer
  sleuth:
    messaging:
      kafka:
        enabled: false
      enabled: false
  main:
    allow-bean-definition-overriding: true
    web-application-type: servlet
  threads:
    virtual:
      enabled: true
  zipkin:
    sender:
      type: web
    service:
      name: ${spring.application.name}-${namespace:local}
  application:
    name: api-gateway

cms:
  url: http://localhost:8000/
search:
  url: http://localhost:8081

image:
  compressFilesLargerThanKb: 400

sendgrid:
  email:
    from: simon@simonjamesrowe.com
    to: simon.rowe@gmail.com

resume:
  cache-on-init: true
